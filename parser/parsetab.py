
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTLTGELEleftPLUSMINUSleftTIMESDIVIDEMODULOrightNOTADD AND ARRAY ASSIGN BREAK COMMA CONTINUE DECLARE DIV DIVIDE DO ELSE EQ FROM FUNCTION GE GT ID IF INPUT INPUT_KEYWORD LBRACE LBRACKET LE LPAREN LT MINUS MOD MODULO MUL NE NEW NOT NUMBER OF OR PLUS PRINT RBRACE RBRACKET RETURN RPAREN SEMI STRING SUB TIMES TO VALUE WHILE WHILE_CONDITIONprogram : statementsstatements : statements statement\n| statementstatement : PRINT LPAREN expression RPAREN SEMIstatement : ID ASSIGN expression SEMIstatement : IF LPAREN expression RPAREN LBRACE statements RBRACE\n| IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACEstatement : WHILE WHILE_CONDITION expression LBRACE statements RBRACEstatement : WHILE ID ASSIGN expression FROM expression TO expression LBRACE statements RBRACEstatement : FUNCTION ID LPAREN params RPAREN LBRACE statements RBRACEstatement : RETURN expression SEMIstatement : INPUT OF ID VALUE INPUT_KEYWORD NEW SEMIstatement : ARRAY DECLARE ID LBRACKET expression RBRACKET SEMIstatement : BREAK SEMIstatement : CONTINUE SEMIparams : params COMMA ID\n| ID\n| emptyexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression MODULO expression\n| expression GT expression\n| expression LT expression\n| expression GE expression\n| expression LE expression\n| expression EQ expression\n| expression NE expression\n| expression AND expression\n| expression OR expressionexpression : NOT expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : IDexpression : ID LPAREN args RPARENargs : args COMMA expression\n| expression\n| emptyempty :'
    
_lr_action_items = {'PRINT':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[4,4,-3,-2,-14,-15,-11,-5,4,-4,4,4,4,-8,4,-6,4,-12,-13,-10,4,4,4,4,-7,-9,]),'ID':([0,2,3,7,8,9,14,15,16,17,18,22,23,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,57,59,82,83,84,85,86,88,90,93,94,96,101,102,103,104,105,108,109,110,111,112,113,114,],[5,5,-3,19,20,26,-2,26,26,26,26,26,26,54,55,-14,-15,26,61,-11,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-5,5,26,-4,5,5,26,97,26,5,-8,5,-6,26,5,-12,-13,-10,5,5,5,5,-7,-9,]),'IF':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[6,6,-3,-2,-14,-15,-11,-5,6,-4,6,6,6,-8,6,-6,6,-12,-13,-10,6,6,6,6,-7,-9,]),'WHILE':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[7,7,-3,-2,-14,-15,-11,-5,7,-4,7,7,7,-8,7,-6,7,-12,-13,-10,7,7,7,7,-7,-9,]),'FUNCTION':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[8,8,-3,-2,-14,-15,-11,-5,8,-4,8,8,8,-8,8,-6,8,-12,-13,-10,8,8,8,8,-7,-9,]),'RETURN':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[9,9,-3,-2,-14,-15,-11,-5,9,-4,9,9,9,-8,9,-6,9,-12,-13,-10,9,9,9,9,-7,-9,]),'INPUT':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[10,10,-3,-2,-14,-15,-11,-5,10,-4,10,10,10,-8,10,-6,10,-12,-13,-10,10,10,10,10,-7,-9,]),'ARRAY':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[11,11,-3,-2,-14,-15,-11,-5,11,-4,11,11,11,-8,11,-6,11,-12,-13,-10,11,11,11,11,-7,-9,]),'BREAK':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[12,12,-3,-2,-14,-15,-11,-5,12,-4,12,12,12,-8,12,-6,12,-12,-13,-10,12,12,12,12,-7,-9,]),'CONTINUE':([0,2,3,14,29,30,37,57,59,83,84,85,93,94,96,101,103,104,105,108,109,110,111,112,113,114,],[13,13,-3,-2,-14,-15,-11,-5,13,-4,13,13,13,-8,13,-6,13,-12,-13,-10,13,13,13,13,-7,-9,]),'$end':([1,2,3,14,29,30,37,57,83,94,101,104,105,108,113,114,],[0,-1,-3,-2,-14,-15,-11,-5,-4,-8,-6,-12,-13,-10,-7,-9,]),'RBRACE':([3,14,29,30,37,57,83,85,93,94,101,103,104,105,108,111,112,113,114,],[-3,-2,-14,-15,-11,-5,-4,94,101,-8,-6,108,-12,-13,-10,113,114,-7,-9,]),'LPAREN':([4,6,9,15,16,17,18,20,22,23,26,35,38,39,40,41,42,43,44,45,46,47,48,49,50,53,82,86,90,102,],[15,17,23,23,23,23,23,36,23,23,53,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ASSIGN':([5,19,],[16,35,]),'WHILE_CONDITION':([7,],[18,]),'NOT':([9,15,16,17,18,22,23,35,38,39,40,41,42,43,44,45,46,47,48,49,50,53,82,86,90,102,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'NUMBER':([9,15,16,17,18,22,23,35,38,39,40,41,42,43,44,45,46,47,48,49,50,53,82,86,90,102,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'STRING':([9,15,16,17,18,22,23,35,38,39,40,41,42,43,44,45,46,47,48,49,50,53,82,86,90,102,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'OF':([10,],[27,]),'DECLARE':([11,],[28,]),'SEMI':([12,13,21,24,25,26,32,51,56,64,65,66,67,68,69,70,71,72,73,74,75,76,77,89,99,100,],[29,30,37,-34,-35,-36,57,-32,83,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-37,104,105,]),'PLUS':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[38,-34,-35,-36,38,38,38,38,-32,38,38,-19,-20,-21,-22,-23,38,38,38,38,38,38,38,38,-33,38,-37,38,38,38,38,]),'MINUS':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[39,-34,-35,-36,39,39,39,39,-32,39,39,-19,-20,-21,-22,-23,39,39,39,39,39,39,39,39,-33,39,-37,39,39,39,39,]),'TIMES':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[40,-34,-35,-36,40,40,40,40,-32,40,40,40,40,-21,-22,-23,40,40,40,40,40,40,40,40,-33,40,-37,40,40,40,40,]),'DIVIDE':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[41,-34,-35,-36,41,41,41,41,-32,41,41,41,41,-21,-22,-23,41,41,41,41,41,41,41,41,-33,41,-37,41,41,41,41,]),'MODULO':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[42,-34,-35,-36,42,42,42,42,-32,42,42,42,42,-21,-22,-23,42,42,42,42,42,42,42,42,-33,42,-37,42,42,42,42,]),'GT':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[43,-34,-35,-36,43,43,43,43,-32,43,43,-19,-20,-21,-22,-23,-24,-25,-26,-27,43,43,43,43,-33,43,-37,43,43,43,43,]),'LT':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[44,-34,-35,-36,44,44,44,44,-32,44,44,-19,-20,-21,-22,-23,-24,-25,-26,-27,44,44,44,44,-33,44,-37,44,44,44,44,]),'GE':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[45,-34,-35,-36,45,45,45,45,-32,45,45,-19,-20,-21,-22,-23,-24,-25,-26,-27,45,45,45,45,-33,45,-37,45,45,45,45,]),'LE':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[46,-34,-35,-36,46,46,46,46,-32,46,46,-19,-20,-21,-22,-23,-24,-25,-26,-27,46,46,46,46,-33,46,-37,46,46,46,46,]),'EQ':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[47,-34,-35,-36,47,47,47,47,-32,47,47,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,47,47,-33,47,-37,47,47,47,47,]),'NE':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[48,-34,-35,-36,48,48,48,48,-32,48,48,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,48,48,-33,48,-37,48,48,48,48,]),'AND':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[49,-34,-35,-36,49,49,49,49,-32,49,49,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,49,-33,49,-37,49,49,49,49,]),'OR':([21,24,25,26,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,89,92,95,98,107,],[50,-34,-35,-36,50,50,50,50,-32,50,50,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,50,-37,50,50,50,50,]),'RPAREN':([24,25,26,31,33,36,51,52,53,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,97,98,],[-34,-35,-36,56,58,-41,-32,77,-41,-17,87,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,89,-39,-40,-37,-16,-38,]),'LBRACE':([24,25,26,34,51,58,64,65,66,67,68,69,70,71,72,73,74,75,76,77,87,89,106,107,],[-34,-35,-36,59,-32,84,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,96,-37,109,110,]),'FROM':([24,25,26,51,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,89,],[-34,-35,-36,-32,86,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-37,]),'COMMA':([24,25,26,36,51,53,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,89,97,98,],[-34,-35,-36,-41,-32,-41,-17,88,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,90,-39,-40,-37,-16,-38,]),'RBRACKET':([24,25,26,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,89,92,],[-34,-35,-36,-32,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-37,100,]),'TO':([24,25,26,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,89,95,],[-34,-35,-36,-32,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-37,102,]),'VALUE':([54,],[81,]),'LBRACKET':([55,],[82,]),'INPUT_KEYWORD':([81,],[91,]),'NEW':([91,],[99,]),'ELSE':([101,],[106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,59,84,96,109,110,],[2,85,93,103,111,112,]),'statement':([0,2,59,84,85,93,96,103,109,110,111,112,],[3,14,3,3,14,14,3,14,3,3,14,14,]),'expression':([9,15,16,17,18,22,23,35,38,39,40,41,42,43,44,45,46,47,48,49,50,53,82,86,90,102,],[21,31,32,33,34,51,52,60,64,65,66,67,68,69,70,71,72,73,74,75,76,79,92,95,98,107,]),'params':([36,],[62,]),'empty':([36,53,],[63,80,]),'args':([53,],[78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',70),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',74),
  ('statements -> statement','statements',1,'p_statements','parser.py',75),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','parser.py',82),
  ('statement -> ID ASSIGN expression SEMI','statement',4,'p_statement_assign','parser.py',86),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_statement_if','parser.py',90),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','statement',11,'p_statement_if','parser.py',91),
  ('statement -> WHILE WHILE_CONDITION expression LBRACE statements RBRACE','statement',6,'p_statement_while','parser.py',98),
  ('statement -> WHILE ID ASSIGN expression FROM expression TO expression LBRACE statements RBRACE','statement',11,'p_statement_for','parser.py',102),
  ('statement -> FUNCTION ID LPAREN params RPAREN LBRACE statements RBRACE','statement',8,'p_statement_function','parser.py',106),
  ('statement -> RETURN expression SEMI','statement',3,'p_statement_return','parser.py',110),
  ('statement -> INPUT OF ID VALUE INPUT_KEYWORD NEW SEMI','statement',7,'p_statement_input','parser.py',114),
  ('statement -> ARRAY DECLARE ID LBRACKET expression RBRACKET SEMI','statement',7,'p_statement_array','parser.py',118),
  ('statement -> BREAK SEMI','statement',2,'p_statement_break','parser.py',122),
  ('statement -> CONTINUE SEMI','statement',2,'p_statement_continue','parser.py',126),
  ('params -> params COMMA ID','params',3,'p_params','parser.py',130),
  ('params -> ID','params',1,'p_params','parser.py',131),
  ('params -> empty','params',1,'p_params','parser.py',132),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',141),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',142),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',143),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',144),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','parser.py',145),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',146),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',147),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',148),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',149),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',150),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',151),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',152),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',153),
  ('expression -> NOT expression','expression',2,'p_expression_unary','parser.py',157),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',161),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',165),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',169),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',173),
  ('expression -> ID LPAREN args RPAREN','expression',4,'p_expression_call','parser.py',177),
  ('args -> args COMMA expression','args',3,'p_args','parser.py',181),
  ('args -> expression','args',1,'p_args','parser.py',182),
  ('args -> empty','args',1,'p_args','parser.py',183),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',192),
]
